/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package prvisual.controllaboratorios;

import conecxion.conexion;
import control.ctr_Usuario;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import modelo.Usuario;

/**
 *
 * @author SAID
 */
public class Gestionar_Usuario extends javax.swing.JFrame {

 
    
    public Gestionar_Usuario() {
        initComponents();
         setLocationRelativeTo(null);
        cargarTablaUsuarios();
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Administrar = new javax.swing.JLabel();
        txt_nombre = new javax.swing.JTextField();
        txt_password = new javax.swing.JTextField();
        lbl_administrarapellido = new javax.swing.JLabel();
        txt_apellido = new javax.swing.JTextField();
        lbl_administrartelefono = new javax.swing.JLabel();
        txt_telefono = new javax.swing.JTextField();
        lbl_administrarusuario = new javax.swing.JLabel();
        txt_usuario = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_usuario = new javax.swing.JTable();
        bnt_eliminarU = new javax.swing.JButton();
        bnt_actualizarU = new javax.swing.JButton();
        lbl_administrarnombre = new javax.swing.JLabel();
        lbl_administrarcontraseña = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Administrar.setFont(new java.awt.Font("Segoe UI Symbol", 1, 18)); // NOI18N
        Administrar.setText("ADMINISTRAR USUARIO");
        getContentPane().add(Administrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(295, 0, -1, -1));

        txt_nombre.setPreferredSize(new java.awt.Dimension(106, 23));
        getContentPane().add(txt_nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 62, 104, -1));

        txt_password.setPreferredSize(new java.awt.Dimension(106, 23));
        getContentPane().add(txt_password, new org.netbeans.lib.awtextra.AbsoluteConstraints(86, 105, -1, -1));

        lbl_administrarapellido.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        lbl_administrarapellido.setText("Apellido");
        getContentPane().add(lbl_administrarapellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(283, 61, -1, -1));

        txt_apellido.setPreferredSize(new java.awt.Dimension(106, 23));
        txt_apellido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_apellidoActionPerformed(evt);
            }
        });
        getContentPane().add(txt_apellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(347, 58, 100, -1));

        lbl_administrartelefono.setFont(new java.awt.Font("Segoe UI Black", 2, 12)); // NOI18N
        lbl_administrartelefono.setText("rol");
        getContentPane().add(lbl_administrartelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(309, 115, -1, -1));

        txt_telefono.setPreferredSize(new java.awt.Dimension(106, 23));
        getContentPane().add(txt_telefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(335, 112, -1, -1));

        lbl_administrarusuario.setFont(new java.awt.Font("Segoe UI Black", 2, 12)); // NOI18N
        lbl_administrarusuario.setText("Usuario");
        getContentPane().add(lbl_administrarusuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(565, 61, -1, -1));

        txt_usuario.setPreferredSize(new java.awt.Dimension(106, 23));
        getContentPane().add(txt_usuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(617, 58, -1, -1));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(51, 153, 255));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        tb_usuario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Nombre", "Apellido", "Usuario", "Contraseña", "Rol"
            }
        ));
        jScrollPane1.setViewportView(tb_usuario);

        bnt_eliminarU.setText("Eliminar");
        bnt_eliminarU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnt_eliminarUActionPerformed(evt);
            }
        });

        bnt_actualizarU.setText("Actualizar");
        bnt_actualizarU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnt_actualizarUActionPerformed(evt);
            }
        });

        lbl_administrarnombre.setFont(new java.awt.Font("Segoe UI Black", 2, 12)); // NOI18N
        lbl_administrarnombre.setText("Nombre");

        lbl_administrarcontraseña.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        lbl_administrarcontraseña.setText("Password");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(274, 274, 274)
                        .addComponent(bnt_eliminarU, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(63, 63, 63)
                        .addComponent(bnt_actualizarU))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 738, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lbl_administrarcontraseña, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbl_administrarnombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(71, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(lbl_administrarnombre)
                .addGap(27, 27, 27)
                .addComponent(lbl_administrarcontraseña)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bnt_eliminarU)
                    .addComponent(bnt_actualizarU))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 840, 500));

        jPanel4.setBackground(new java.awt.Color(51, 153, 255));

        jButton1.setText("Regresar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addContainerGap(758, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(11, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 500, 840, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bnt_actualizarUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnt_actualizarUActionPerformed
                                              
    
    String usuario = txt_usuario.getText();
    String nombre = txt_nombre.getText();
    String apellido = txt_apellido.getText();
    String password = txt_password.getText();
    String rol = txt_telefono.getText();

    if (usuario.isEmpty() || nombre.isEmpty() || apellido.isEmpty() || password.isEmpty() || rol.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Por favor, complete todos los campos.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    try {
        Connection cn = conexion.conectar(); 
        String query = "UPDATE tb_usuario SET nombre = ?, apellido = ?, password = ?, rol = ? WHERE usuario = ?";
        PreparedStatement stmt = cn.prepareStatement(query);

        // Establecer los valores de los parámetros de la consulta
        stmt.setString(1, nombre);
        stmt.setString(2, apellido);
        stmt.setString(3, password);
        stmt.setString(4, rol);
        stmt.setString(5, usuario);

        // Ejecutar la consulta de actualización
        int filasActualizadas = stmt.executeUpdate();
        if (filasActualizadas > 0) {
            JOptionPane.showMessageDialog(this, "Usuario actualizado correctamente.", "Actualización exitosa", JOptionPane.INFORMATION_MESSAGE);

            // Actualizar la tabla con los nuevos datos
            cargarTablaUsuarios();
        } else {
            JOptionPane.showMessageDialog(this, "No se pudo actualizar el usuario.", "Error", JOptionPane.ERROR_MESSAGE);
        }

        stmt.close();
        cn.close();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error al actualizar el usuario: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }

    }//GEN-LAST:event_bnt_actualizarUActionPerformed

    private void bnt_eliminarUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnt_eliminarUActionPerformed
 String usuario = txt_usuario.getText(); // Obtener el valor de cédula del campo de texto

if (usuario.isEmpty()) {
    JOptionPane.showMessageDialog(this, "Por favor, ingrese la cédula del usuario que desea eliminar.", "Error", JOptionPane.ERROR_MESSAGE);
    return;
}

int confirmacion = JOptionPane.showConfirmDialog(this, "¿Está seguro de que desea eliminar este usuario?", "Confirmar eliminación", JOptionPane.YES_NO_OPTION);
if (confirmacion != JOptionPane.YES_OPTION) {
    return; // Si el usuario no confirma la eliminación, no hacemos nada
}

try {
    Connection cn = conexion.conectar(); // Obtener la conexión a la base de datos

    // Deshabilitar temporalmente la verificación de claves foráneas para permitir la eliminación en cascada
    String disableFKCheckQuery = "SET FOREIGN_KEY_CHECKS=0";
    PreparedStatement disableFKCheckStmt = cn.prepareStatement(disableFKCheckQuery);
    disableFKCheckStmt.executeUpdate();

    String query = "DELETE FROM tb_usuario WHERE usuario = ?";
    PreparedStatement stmt = cn.prepareStatement(query);

    // Establecer el valor del parámetro de la consulta (la cédula del usuario a eliminar)
    stmt.setString(1, usuario);

    // Ejecutar la consulta de eliminación
    int filasEliminadas = stmt.executeUpdate();
    if (filasEliminadas > 0) {
        JOptionPane.showMessageDialog(this, "Usuario eliminado correctamente.", "Eliminación exitosa", JOptionPane.INFORMATION_MESSAGE);

        // Actualizar la tabla con los nuevos datos (sin el usuario eliminado)
        cargarTablaUsuarios();

        // Limpiar los campos de texto después de la eliminación
        Limpiar();
    } else {
        JOptionPane.showMessageDialog(this, "No se encontró ningún usuario con esa cédula.", "Error", JOptionPane.ERROR_MESSAGE);
    }

    // Habilitar nuevamente la verificación de claves foráneas después de la eliminación en cascada
    String enableFKCheckQuery = "SET FOREIGN_KEY_CHECKS=1";
    PreparedStatement enableFKCheckStmt = cn.prepareStatement(enableFKCheckQuery);
    enableFKCheckStmt.executeUpdate();

    stmt.close();
    cn.close();
} catch (Exception e) {
    JOptionPane.showMessageDialog(this, "Error al eliminar el usuario: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
}
        
    }//GEN-LAST:event_bnt_eliminarUActionPerformed

    private void txt_apellidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_apellidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_apellidoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       Nuevo_usuario nv=new Nuevo_usuario();
       nv.setVisible(true);
       this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Gestionar_Usuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Gestionar_Usuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Gestionar_Usuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Gestionar_Usuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Gestionar_Usuario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Administrar;
    private javax.swing.JButton bnt_actualizarU;
    private javax.swing.JButton bnt_eliminarU;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    public static javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_administrarapellido;
    private javax.swing.JLabel lbl_administrarcontraseña;
    private javax.swing.JLabel lbl_administrarnombre;
    private javax.swing.JLabel lbl_administrartelefono;
    private javax.swing.JLabel lbl_administrarusuario;
    public static javax.swing.JTable tb_usuario;
    private javax.swing.JTextField txt_apellido;
    private javax.swing.JTextField txt_nombre;
    private javax.swing.JTextField txt_password;
    private javax.swing.JTextField txt_telefono;
    private javax.swing.JTextField txt_usuario;
    // End of variables declaration//GEN-END:variables
private void Limpiar() {
        
        txt_nombre.setText("");
        txt_apellido.setText("");
        txt_usuario.setText("");
        txt_password.setText("");
        txt_telefono.setText("");
    }   
    


private void cargarTablaUsuarios() {
    DefaultTableModel model = (DefaultTableModel) tb_usuario.getModel();
    model.setRowCount(0); // Limpiar la tabla antes de cargar nuevos datos

    try {
        Connection cn = conexion.conectar(); // Obtener la conexión a la base de datos
        Statement stmt = cn.createStatement();
        String query = "SELECT usuario, nombre, apellido,password ,rol FROM tb_usuario";
        ResultSet rs = stmt.executeQuery(query);

        while (rs.next()) {
             String nombre = rs.getString("nombre");
               String apellido = rs.getString("apellido");
            String usuario = rs.getString("usuario");
          
              String password = rs.getString("password");
            String rol = rs.getString("rol");

            // Agregar los datos a la tabla
            model.addRow(new Object[]{ nombre, apellido,usuario,password, rol});
        }

        rs.close();
        stmt.close();
        cn.close();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error al cargar usuarios: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }

   
    tb_usuario.addMouseListener(new MouseAdapter() {
        @Override
        public void mouseClicked(MouseEvent e) {
            int filaSeleccionada = tb_usuario.getSelectedRow();
            if (filaSeleccionada >= 0) {
                String usuario = tb_usuario.getValueAt(filaSeleccionada, 2).toString();
                String nombre = tb_usuario.getValueAt(filaSeleccionada, 0).toString();
                String apellido = tb_usuario.getValueAt(filaSeleccionada, 1).toString();
                String password = tb_usuario.getValueAt(filaSeleccionada, 3).toString();
                String rol = tb_usuario.getValueAt(filaSeleccionada, 4).toString();

                // Mostrar los datos en los campos de texto
                txt_usuario.setText(usuario);
                txt_nombre.setText(nombre);
                txt_apellido.setText(apellido);
                txt_password.setText(password);
                txt_telefono.setText(rol);
            }
        }
    });

}


}
